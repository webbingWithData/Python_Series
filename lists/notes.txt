Python List:- 
a built-in data structure that can hold an ordered collection of items.

Features:-
- can contain duplicate items
- Mutable in nature
- Ordered:- elements maintain the order in which they were added
- Index-based:- items are accessed using their position (starting from 0)
- Can store mixed data types (integers, strings, booleans, even other lists)

Note:- List starts with square bracket[]


Creating a List:-
You just put your items inside square brackets [], separated by commas. That’s it!

a = [1,2,3,4,5,6]
b = ['ankit', 'Adarsh', 'Ayush','Akarshit']

c = [1,'heyy',3.296, True]

You can create it using list constructor as well:-
a = list((4, 2, 3, 'apple', 4.5))  
print(a)


Accessing List Items;-
Lists are ordered, which means every item has an index starting from 0.
So the first element is index 0, the second is 1, and so on.

fruits = ["apple", "banana", "mango"]
print(fruits[0])  # apple
print(fruits[2])  # mango


Modifying/Updating a list:-
The cool part is – Lists are mutable, which means you can change them after creating.

fruits[1] = "grapes"
print(fruits)  # ['apple', 'grapes', 'mango']


Adding Element into List:-
we can do that in following ways:-
append(): Adds an element at the end of the list.
extend(): Adds multiple elements to the end of the list.
insert(): Adds an element at a specific position.

a = []
a.append(10)  
print("After appending 10:- ", a)  

a.insert(0, 5)
print("After inserting 0 to 5:- ", a) 

a.extend([7, 20, 9])  
print("After extending with [7, 20, 9]:- ", a) 

Removing Elements from List:-
remove(): Removes the first occurrence of an element.

pop(): Removes the element at a specific index or the last element if no index is specified.

del statement: Deletes an element at a specified index.
clear(): removes all items.

fruits = ["apple", "banana", "mango", "grapes", "banana"]
fruits.remove("banana")
fruits.pop(2) 
fruits.pop()
del fruits[0]
fruits.clear()

List Slicing:-
You can also take a part of a List using slicing.
numbers = [10, 20, 30, 40, 50, 60]
print(numbers[1:4])   # [20, 30, 40]
print(numbers[:3])    # [10, 20, 30]
print(numbers[-2:])   # [50, 60]


Useful List Methods:-
Initial List
numbers = [10, 20, 5, 30, 20, 10, 40]
print("Original List:", numbers)

1. len(list) → length of the list
print("Length of list:", len(numbers))

2. min(list), max(list) → smallest and largest
print("Minimum element:", min(numbers))
print("Maximum element:", max(numbers))

3. sum(list) → adds up numbers
print("Sum of elements:", sum(numbers))

4. sort() → sort the list
numbers.sort()
print("After sort():", numbers)

5. reverse() → reverses the list
numbers.reverse()
print("After reverse():", numbers)

6. index() → gives index of the first occurrence
print("Index of 20:", numbers.index(20))

 7. count() → counts how many times an element appears
print("Count of 10:", numbers.count(10))

 8. copy() → creates a copy of the list
copy_list = numbers.copy()
print("Copied List:", copy_list)


list concatenation:-
l+m
